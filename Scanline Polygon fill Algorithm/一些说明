这个是我以前在本科华电，最后一学期上了计算机专业的专选（人家是大二的专选，我个大五的去上了，脸皮不是一般的厚），计算机图形学基础课。
我记得b站胡事民老师的计算机图形学视频课有提到光栅图形学的东西，但是没有细讲，跳过了。我的老师细讲了。

老师讲的 **** 多边形转换 - 扫描线算法 ****
（一个头发花白的老师，忘了他叫啥了）

- 多边形转换：将给出的多边形顶点数据，转换为像素点阵，也就是填充多边形
（我做的是封闭的数据，第一个顶点和最后一个顶点是一样的）
- - 扫描线算法：用一条一条线段填充这个多边形

*** 核心逻辑 ***（来自任爱华的《计算机图形学》）
对每一条扫描线的操作：
1、求交点：求扫描线与多边形各边的交点。
2、排序：交点按x递增排序，因为配对的时候需要从左到右配对。
3、交点配对：配对是为了确认填充区间。第一个点与第二个点配对，第三个与第四个配对，以此类推。
4、区间填色：配对的交点之间画一条线段。画了很多线段之后，多边形就填充好了。

我找的代码和我的代码逻辑大概如下：
*** 具体记不太清了，具体请看我的代码、上课笔记和电子工业出版社任爱华的《计算机图形学》 ***
1、从txt文件中读取多边形顶点信息，并构成线段信息。**使用C++读取文件操作。
2、遍历各条边：
  a.为整个多边形建立新边表 New Edge Table，起名叫 NET 。
  b.这个 NET 是一个链表，用来存放扫描到 y=i 的扫描线时，新遇到的边
3、初始化活性边表 Active Edge Table，起名叫 AET。
  AET 也是一个链表，用来存放扫描时，与扫描线相交的边。开始时是空的。
4、从多边形最低点开始扫描，对每一条扫描线执行上面写的核心逻辑。（我好像是直接从0，也就是整个窗口的最低点开始的，记不清了。。）

